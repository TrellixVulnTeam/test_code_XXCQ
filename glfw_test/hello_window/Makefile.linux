# GLFW code makefile template

CC=g++

## put include path in CFLAGS
# IDIR=../include/
# CFLAGS=-c -Wall -I$(IDIR)
CFLAGS=-c -Wall

## put libs in LDFLAGS like -L/path/to/lib/ -l/lib name/
LDFLAGS=
## Have to use all the following libs for GLFW codes
LIBS = -lglfw3 -lglut -lGLEW -lGLU -lGL -ldl -lX11 -lpthread -lXrandr -lXi -lXxf86vm -lXinerama -lXcursor 

## Program's target name
TARGET = hello_window

## Path for source codes and target file
SOURCEPATH = .
TARGETPATH = .

## Put all cpp file to be compiled here
SOURCES = $(wildcard $(SOURCEPATH)/*.cpp)
# SOURCES = hello_triangle.cpp glad.c
OBJECTS = $(SOURCES:.cpp=.o)
EXECUTABLE = $(TARGETPATH)/$(TARGET)

.PHONY: all
all: $(SOURCES) $(EXECUTABLE)

## Each front @ is to hide the compilation line from the std output screen
$(EXECUTABLE) : $(OBJECTS)
	@echo Target program  \"$(TARGET)\" is stored in \"$(TARGETPATH)\"
	@$(CC) $(LDFLAGS) $(OBJECTS) -o $@ $(LIBS)

.cpp.o: $(SOURCES)
	@$(CC) $(CFLAGS) $< -o $@

.PHONY: clean
clean:
	@rm -rf $(EXECUTABLE) 
	@rm -f $(SOURCEPATH)/*.o 