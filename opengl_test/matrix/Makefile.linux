CC=g++

## Put EACH include path after -I (such as -Isrc, -I../include/).
## If you have no additional include path, just do NOT use IDIR.
# CFLAGS=-c -Wall -Ipathname
CFLAGS=-c -Wall

## Put EACH library path in LDFLAGS like -L/path/to/lib/
LDFLAGS=
## Put each library name here like -lname
LIBS = -lglut -lGLU -lGL

## Program's target name
TARGET = demo_matrix

## Path for source codes and target file
SOURCEPATH = src
TARGETPATH = .

## Put all cpp file to be compiled here
## NOTE: if you want to compile all the cpp files in a folder,
## you can use the following line. You can also write all 
## to-be-compiled cpp filenames here one by one if you want.
# SOURCES = $(wildcard $(SOURCEPATH)/*.cpp)

## This code is a little special: we need to exclude test_matrix.cpp
## which also contains main().
SOURCES = $(wildcard $(SOURCEPATH)/main.cpp $(SOURCEPATH)/Matrices.cpp $(SOURCEPATH)/Timer.cpp)
OBJECTS = $(SOURCES:.cpp=.o)
EXECUTABLE = $(TARGETPATH)/$(TARGET)

.PHONY: all
all: $(SOURCES) $(EXECUTABLE)

## Each front @ is to hide the compilation line from the std output screen
$(EXECUTABLE) : $(OBJECTS)
## NOTE: the front \033[0;32m is for using color on output text. Simply change
## the last 0;32 to some other value to change color. 
	@echo "\033[0;32mTarget problem \"$(TARGET)\" is stored as \"$(EXECUTABLE)\""
	@$(CC) $(LDFLAGS) $(OBJECTS) -o $@ $(LIBS)

.cpp.o:
	@$(CC) $(CFLAGS) $< -o $@

.PHONY: clean
clean:
	@rm -rf $(EXECUTABLE) 
	@rm -f $(SOURCEPATH)/*.o 